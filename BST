
public class BST {
	public static void main(String[] args){
		int a[] = {1,3,2,45,10};
		Node1 root = null;
		Node1 head = new Node1(a[0]); 
		for(int i =1;i<a.length;i++){ // for循环构建二叉搜索树
			root = head;
			while(true){
				if(a[i] > root.val){
					if(root.right == null)
					{
						root.right = new Node1(a[i]);
						break;
					}
					root = root.right;
				}else{
					if(root.left == null){
						root.left = new Node1(a[i]);
						break;
					}
					root = root.left;
				}
			}
		}
		zhouxubianli(head); // 中序遍历  
		
		System.out.println(search(head, 415)); //查找
	}
	public static void zhouxubianli(Node1 root){
		if(root == null)
			return;
		Node1 left  = root.left;
		Node1 right = root.right;
		zhouxubianli(left);
		System.out.print(root.val + "  ");
		zhouxubianli(right);
	}
	
	public static boolean search(Node1 root,int key){
		while(root !=null && root.val != key){
			if(key < root.val)
				root = root.left;
			else
				root  = root.right;
		}
		return root != null;
	}
}

class Node1 {
	Node1 left = null;
	Node1 right = null;
	int val = 0;
	public Node1(int val){
		this.val = val;
	}
	public void show(){
		System.out.println(this.val + " ");
	}
}
